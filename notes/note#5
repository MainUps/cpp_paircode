10월 30일  이종명, 정인철

프렌드 함수란 마치 친구처럼 외부의 존재이면서 나의 집에서 가족과 대등한 권한을 갖는 키워드이다.

인철의 궁금한 점 : 이런 거 써서 편하게 접근할거면 객체지향의 캡슐화 정신에 위배되는 거 아닌가?

프렌드 자세히!
존재 : 클래스 외부에 작성된 함수. 멤버가 아님
자격 : 클래스의 멤버 자격 부여. 클래스의 모든 맴버에 대해 접근 가능
선언 : 클래스 내에 freiend키워드로 선언
개수 : 프렌드 함수 개수에 제한 없음

class A {
 ~~~~
 }

class B {
  ~~~~
  friend bool methodA();
}
해놓으면 methodA가 실행할 때 B의 private한 메서드와 필드에 접근할 수 있다!

연산자는 모두 정의가 되어있고, 필요에 의해서 오버로딩하여 객체에 대한 복잡한 처리를 간단하게 해결할 수 있다.

{리턴타입} operator{연산자}({매개변수리스트});
로 생성하며 

Color a(BLUE), b(RED), c;
가 있을 때
1. 클래스의 멤버 함수
class Color {
  ~~~
  Coloroperator+ (Color op2);
  bool operator== (Color op2);
};


2. 외부 함수로 구현되고 프렌드로 선언
class Color 
